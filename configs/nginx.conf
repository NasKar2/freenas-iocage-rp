
#user  nobody;
worker_processes  1;

# This default error log path is compiled-in to make sure configuration parsing
# errors are logged somewhere, especially during unattended boot when stderr
# isn't normally logged anywhere. This path will be touched on every nginx
# start regardless of error log location configured here. See
# https://trac.nginx.org/nginx/ticket/147 for more info. 
#
#error_log  /var/log/nginx/error.log;
#

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

 #######SSL SECTION########################################
    # global SSL options with Perfect Forward Secrecy (PFS) high strength ciphers
    # first. PFS ciphers are those which start with ECDHE which means (EC)DHE
    # which stands for (Elliptic Curve) Diffie-Hellman Ephemeral. 256bit preference.

    # ciphers for RSA signed certificates

# recommendations from rg305
ssl_ciphers CHACHA20:ECDSA+AESGCM:ECDHE+AESGCM:ECDSA+SHA384:ECDSA+SHA256:ECDHE+SHA384:ECDHE+SHA256:ECDSA:ECDHE:!3DES:!ADH:!AECDH:!AESCCM:!aNULL:!CAMELLIA:!DES:!DHE:!DSS:!eNULL:!EXP:!IDEA:!LOW:!MD5:!MEDIUM:!NULL:!PSK:!RC4:!SEED:!SHA1:!SRP;

#generic ssl section for ssl branch
    ssl_certificate /usr/local/etc/letsencrypt/live/yourhostnamehere/fullchain.pem;
    ssl_certificate_key /usr/local/etc/letsencrypt/live/yourhostnamehere/privkey.pem;
    ssl_trusted_certificate /usr/local/etc/letsencrypt/live/yourhostnamehere/chain.pem;
    ssl_dhparam /usr/local/etc/nginx/ssl/dhparam.pem;

    ssl_ecdh_curve secp384r1;              # 384 bit prime modulus curve efficiently supports ECDHE ssl_ciphers up to a SHA384 hash
    ssl_prefer_server_ciphers on;          # the preferred ciphers are listed on the server by "ssl_ciphers"
    ssl_protocols TLSv1.2; # TLSv1.1 TLSv1;   # protocols, the order is unimportant
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 128s;              # how long before the client and server must renegotiate the ssl key
    ssl_stapling on;                       # staple the ssl cert to the initial reply returned to the client for speed
    ssl_stapling_verify on;

    ######END SSL SECTION########################################



    server {
        listen       80;
        listen      443 ssl;
        server_name  youripaddress;
#       include ssl_common.conf;
        include proxy_setup.conf;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /usr/local/www/nginx;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/www/nginx-dist;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
